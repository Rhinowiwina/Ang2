"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var testing_1 = require("@angular/core/testing");
var ng2_bs3_modal_1 = require("../ng2-bs3-modal");
var common_1 = require("../../test/common");
describe('AutofocusDirective', function () {
    var fixture;
    beforeEach(function () {
        testing_1.TestBed.configureTestingModule({
            imports: [ng2_bs3_modal_1.Ng2Bs3ModalModule],
            declarations: [TestComponent, MissingModalComponent]
        });
    });
    afterEach(testing_1.fakeAsync(function () {
        testing_1.TestBed.resetTestingModule();
        testing_1.tick(300); // backdrop transition
        testing_1.tick(150); // modal transition
    }));
    it('should not throw an error if a modal isn\'t present', function () {
        var fixture = common_1.createRoot(MissingModalComponent);
    });
    it('should autofocus on element when modal is opened', testing_1.fakeAsync(function () {
        var fixture = common_1.createRoot(TestComponent);
        fixture.componentInstance.open();
        testing_1.tick();
        expect(document.getElementById('text')).toBe(document.activeElement);
    }));
    it('should autofocus on element when modal is opened with animations', testing_1.fakeAsync(function () {
        var fixture = common_1.createRoot(TestComponent);
        fixture.componentInstance.animation = true;
        fixture.detectChanges();
        fixture.componentInstance.open();
        testing_1.tick(150); // backdrop transition
        testing_1.tick(300); // modal transition
        expect(document.getElementById('text')).toBe(document.activeElement);
    }));
});
var TestComponent = (function () {
    function TestComponent() {
        this.animation = false;
    }
    TestComponent.prototype.open = function () {
        return this.modal.open();
    };
    return TestComponent;
}());
__decorate([
    core_1.ViewChild(ng2_bs3_modal_1.ModalComponent),
    __metadata("design:type", ng2_bs3_modal_1.ModalComponent)
], TestComponent.prototype, "modal", void 0);
TestComponent = __decorate([
    core_1.Component({
        selector: 'test-component',
        template: "\n        <modal #modal [animation]=\"animation\">\n            <modal-header [show-close]=\"true\">\n                <h4 class=\"modal-title\">I'm a modal!</h4>\n            </modal-header>\n            <modal-body>\n                <input type=\"text\" id=\"text\" autofocus />\n            </modal-body>\n            <modal-footer [show-default-buttons]=\"true\"></modal-footer>\n        </modal>\n    "
    })
], TestComponent);
var MissingModalComponent = (function () {
    function MissingModalComponent() {
    }
    return MissingModalComponent;
}());
MissingModalComponent = __decorate([
    core_1.Component({
        selector: 'missing-modal-component',
        template: "\n        <input type=\"text\" id=\"text\" autofocus />\n    "
    })
], MissingModalComponent);
//# sourceMappingURL=autofocus.spec.js.map